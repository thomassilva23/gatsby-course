{"version":3,"sources":["webpack:///./src/components/Layout/styled.js","webpack:///./src/components/Layout/index.js","webpack:///./src/components/PostItem/styled.js","webpack:///./src/components/PostItem/index.js","webpack:///./src/components/Pagination/styled.js","webpack:///./src/components/Pagination/index.js","webpack:///./src/templates/blog-list.js"],"names":["LayoutWrapper","styled","section","LayoutMain","main","Layout","children","Sidebar","MenuBar","PostItemLink","Link","PostItemWrapper","PostItemTag","div","props","background","PostItemInfo","PostItemDate","time","PostItemTitle","h1","PostItemDescription","p","PostItem","slug","category","date","timeToRead","title","description","to","PaginationWrapper","Pagination","isFirst","isLast","currentPage","numPages","prevPage","nextPage","BlogList","postList","data","allMarkdownRemark","edges","pageContext","map","node","frontmatter","fields"],"mappings":"wJAEaA,EAAgBC,IAAOC,QAAV,2EAAGD,CAAH,mBAGbE,EAAaF,IAAOG,KAAV,wEAAGH,CAAH,+E,YCkBRI,IAfA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,MACA,kBAACC,EAAA,EAAD,MACA,kBAAC,EAAD,KAAeD,GACf,kBAACE,EAAA,EAAD,S,kHCVOC,EAAeR,YAAOS,QAAV,2EAAGT,CAAH,6EAUZU,EAAkBV,IAAOC,QAAV,8EAAGD,CAAH,mGAQfW,EAAcX,IAAOY,IAAV,0EAAGZ,CAAH,kMAER,SAAAa,GAAK,OAAKA,EAAMC,WAAaD,EAAMC,WAAa,aAYnDC,EAAef,IAAOY,IAAV,2EAAGZ,CAAH,4DAMZgB,EAAehB,IAAOiB,KAAV,2EAAGjB,CAAH,uBAIZkB,EAAgBlB,IAAOmB,GAAV,4EAAGnB,CAAH,8DAMboB,EAAsBpB,IAAOqB,EAAV,kFAAGrB,CAAH,uDCdjBsB,EAjCE,SAAC,GAAD,IACfC,EADe,EACfA,KACAT,EAFe,EAEfA,WACAU,EAHe,EAGfA,SACAC,EAJe,EAIfA,KACAC,EALe,EAKfA,WACAC,EANe,EAMfA,MACAC,EAPe,EAOfA,YAPe,OASf,kBAAC,EAAD,CAAgBC,GAAIN,GAClB,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAeT,WAAYA,GAAaU,GACxC,kBAAC,EAAD,KACE,kBAAC,EAAD,KACGC,EADH,MACYC,EADZ,mBAGA,kBAAC,EAAD,KAAkBC,GAClB,kBAAC,EAAD,KAAwBC,OCpBnBE,EAAoB9B,IAAOC,QAAV,4EAAGD,CAAH,sNC6Bf+B,EAzBI,SAAC,GAAD,IACjBC,EADiB,EACjBA,QACAC,EAFiB,EAEjBA,OACAC,EAHiB,EAGjBA,YACAC,EAJiB,EAIjBA,SACAC,EALiB,EAKjBA,SACAC,EANiB,EAMjBA,SANiB,OAQjB,kBAAC,EAAD,MACIL,GAAW,kBAAC,OAAD,CAAMH,GAAIO,GAAV,qBACb,2BACGF,EADH,OACoBC,IAElBF,GAAU,kBAAC,OAAD,CAAMJ,GAAIQ,GAAV,sBCyDDC,UApEE,SAAAzB,GACf,IAAM0B,EAAW1B,EAAM2B,KAAKC,kBAAkBC,MADtB,EAGU7B,EAAM8B,YAAhCT,EAHgB,EAGhBA,YAAaC,EAHG,EAGHA,SACfH,EAA0B,IAAhBE,EACVD,EAASC,IAAgBC,EACzBC,EAAWF,EAAc,GAAM,EAAI,IAAxB,UAAuCA,EAAc,GAChEG,EAAQ,UAAYH,EAAc,GACxC,OACE,kBAAC9B,EAAA,EAAD,KACE,kBAAC,IAAD,CAAKuB,MAAM,SACVY,EAASK,KACR,oBACEC,KADF,IAEIC,YAAehC,EAFnB,EAEmBA,WAAYU,EAF/B,EAE+BA,SAAUC,EAFzC,EAEyCA,KAAMG,EAF/C,EAE+CA,YAAaD,EAF5D,EAE4DA,MACxDD,EAHJ,EAGIA,WACUH,EAJd,EAIIwB,OAAUxB,KAJd,OAOE,kBAAC,EAAD,CACEA,KAAMA,EACNT,WAAYA,EACZU,SAAUA,EACVC,KAAMA,EACNC,WAAYA,EACZC,MAAOA,EACPC,YAAaA,OAInB,kBAAC,EAAD,CACEI,QAASA,EACTC,OAAQA,EACRC,YAAaA,EACbC,SAAUA,EACVC,SAAUA,EACVC,SAAUA","file":"component---src-templates-blog-list-js-ef343f77dc9cc5199544.js","sourcesContent":["import styled from \"styled-components\"\r\n\r\nexport const LayoutWrapper = styled.section`\r\n  display: flex;\r\n`\r\nexport const LayoutMain = styled.main`\r\n  background: #16202c;\r\n  min-height: 100vh;\r\n  padding: 0 3.75rem 0 20rem;\r\n  width: 100%;\r\n`\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Sidebar from \"../Sidebar\"\r\nimport MenuBar from \"../MenuBar\"\r\n\r\nimport * as S from \"./styled\"\r\nimport GlobalStyles from \"../../styles/global\"\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <S.LayoutWrapper>\r\n      <GlobalStyles />\r\n      <Sidebar />\r\n      <S.LayoutMain>{children}</S.LayoutMain>\r\n      <MenuBar />\r\n    </S.LayoutWrapper>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import styled from \"styled-components\"\r\n\r\nimport { Link } from \"gatsby\"\r\n\r\nexport const PostItemLink = styled(Link)`\r\n  color: #8899a6;\r\n  display: flex;\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    color: #1fa1f2;\r\n  }\r\n`\r\n\r\nexport const PostItemWrapper = styled.section`\r\n  align-items: center;\r\n  border-bottom: 1px solid #38444d;\r\n  display: flex;\r\n  padding: 2rem 3rem;\r\n  width: 100%;\r\n`\r\n\r\nexport const PostItemTag = styled.div`\r\n  align-items: center;\r\n  background: ${props => (props.background ? props.background : \"#1fa1f2\")};\r\n  border-radius: 50%;\r\n  color: #fff;\r\n  display: flex;\r\n  font-size: 1.3rem;\r\n  font-weight: 700;\r\n  justify-content: center;\r\n  min-height: 90px;\r\n  min-width: 90px;\r\n  text-transform: uppercase;\r\n`\r\n\r\nexport const PostItemInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 1.5rem;\r\n`\r\n\r\nexport const PostItemDate = styled.time`\r\n  font-size: 0.9rem;\r\n`\r\n\r\nexport const PostItemTitle = styled.h1`\r\n  font-size: 1.6rem;\r\n  font-weight: 700;\r\n  margin: 0.2rem 0 0.5rem;\r\n`\r\n\r\nexport const PostItemDescription = styled.p`\r\n  font-size: 1.2rem;\r\n  font-weight: 300;\r\n  line-height: 1.2;\r\n`\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport * as S from \"./styled\"\r\n\r\nconst PostItem = ({\r\n  slug,\r\n  background,\r\n  category,\r\n  date,\r\n  timeToRead,\r\n  title,\r\n  description,\r\n}) => (\r\n  <S.PostItemLink to={slug}>\r\n    <S.PostItemWrapper>\r\n      <S.PostItemTag background={background}>{category}</S.PostItemTag>\r\n      <S.PostItemInfo>\r\n        <S.PostItemDate>\r\n          {date} • {timeToRead} min de leitura\r\n        </S.PostItemDate>\r\n        <S.PostItemTitle>{title}</S.PostItemTitle>\r\n        <S.PostItemDescription>{description}</S.PostItemDescription>\r\n      </S.PostItemInfo>\r\n    </S.PostItemWrapper>\r\n  </S.PostItemLink>\r\n)\r\n\r\nPostItem.propTypes = {\r\n  slug: PropTypes.string.isRequired,\r\n  background: PropTypes.string,\r\n  category: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired,\r\n  timeToRead: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default PostItem\r\n","import styled from \"styled-components\"\r\n\r\nexport const PaginationWrapper = styled.section`\r\n  align-items: center;\r\n  border-top: 1px solid #38444d;\r\n  color: #8899a6;\r\n  display: flex;\r\n  padding: 1.5rem 3rem;\r\n  justify-content: space-between;\r\n\r\n  a {\r\n    color: #8899a6;\r\n    text-decoration: none;\r\n    transition: color 0.5s;\r\n\r\n    &:hover {\r\n      color: #1fa1f2;\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport propTypes from \"prop-types\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport * as S from \"./styled\"\r\n\r\nconst Pagination = ({\r\n  isFirst,\r\n  isLast,\r\n  currentPage,\r\n  numPages,\r\n  prevPage,\r\n  nextPage,\r\n}) => (\r\n  <S.PaginationWrapper>\r\n    {!isFirst && <Link to={prevPage}>← Página anterior</Link>}\r\n    <p>\r\n      {currentPage} de {numPages}\r\n    </p>\r\n    {!isLast && <Link to={nextPage}>Próxima página →</Link>}\r\n  </S.PaginationWrapper>\r\n)\r\n\r\nPagination.propTypes = {\r\n  isFirst: propTypes.bool.isRequired,\r\n  isLast: propTypes.bool.isRequired,\r\n  currentPage: propTypes.number.isRequired,\r\n  numPages: propTypes.number.isRequired,\r\n  prevPage: propTypes.string,\r\n  nextPage: propTypes.string,\r\n}\r\nexport default Pagination\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/Layout\"\r\nimport SEO from \"../components/seo\"\r\nimport PostItem from \"../components/PostItem\"\r\nimport Pagination from \"../components/Pagination\"\r\n\r\nconst BlogList = props => {\r\n  const postList = props.data.allMarkdownRemark.edges\r\n\r\n  const { currentPage, numPages } = props.pageContext\r\n  const isFirst = currentPage === 1\r\n  const isLast = currentPage === numPages\r\n  const prevPage = currentPage - 1 === 1 ? \"/\" : `/page/${currentPage - 1}`\r\n  const nextPage = `/page/${currentPage + 1}`\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Home\" />\r\n      {postList.map(\r\n        ({\r\n          node: {\r\n            frontmatter: { background, category, date, description, title },\r\n            timeToRead,\r\n            fields: { slug },\r\n          },\r\n        }) => (\r\n          <PostItem\r\n            slug={slug}\r\n            background={background}\r\n            category={category}\r\n            date={date}\r\n            timeToRead={timeToRead}\r\n            title={title}\r\n            description={description}\r\n          />\r\n        )\r\n      )}\r\n      <Pagination\r\n        isFirst={isFirst}\r\n        isLast={isLast}\r\n        currentPage={currentPage}\r\n        numPages={numPages}\r\n        prevPage={prevPage}\r\n        nextPage={nextPage}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query PostList($skip: Int!, $limit: Int!) {\r\n    allMarkdownRemark(\r\n      sort: { fields: frontmatter___date, order: DESC }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            background\r\n            category\r\n            date(locale: \"pt-br\", formatString: \"DD [de] MMMM [de] YYYY\")\r\n            description\r\n            title\r\n          }\r\n          timeToRead\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default BlogList\r\n"],"sourceRoot":""}